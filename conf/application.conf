# Copyright 2020 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

appName = "address-lookup"

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform backend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.MicroserviceModule"

play.http.filters = "uk.gov.hmrc.play.bootstrap.filters.MicroserviceFilters"
play.http.router = app.Routes

#play 2.5 requires an application secret
play.crypto.secret: "H7dVw$PlJiD)^U,oa4TA1pa]pT:4ETLqbL&2P=n6T~p,A*}^.Y46@PQOV~9(B09Hc]t7-hsf~&@w=zH"

play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.http.JsonErrorHandler"

play.ws.timeout.request = 70000ms    # 70 secs

logger.resource: /application-json-logger.xml

# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The controllers below are the exceptions to this rule.

controllers {
  com.kenshoo.play.metrics.MetricsController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }
  uk.gov.hmrc.play.health.AdminController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }
}

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
  extraMeasured = []
}

elastic {
  # Use localMode for testing with no Elasticsearch server installed
  #localMode = false

  # multiple clusters can be added using a + delimeter
  uri = "elasticsearch://localhost:9300"

  clusterName = "address-reputation"

  # Set to true if you have a cluster of more than one node. It will create replicas for the in-use
  # indexes and wait for them to initialise. If you only have one node this will never go green so
  # set is-cluster=false in that case.
  isCluster = false

  shards {
    test: 1
    abi: 3
    abp: 30
  }

  # If needed, specify a directory for built-in Elasticsearch served from disk.
  #homeDir = /tmp/ars

  # Set preDelete=true to wipe existing data from disk on startup (used with homeDir only)
  #preDelete = true

  # If needed, load test data at startup
  #cannedData = true
}

db.address-lookup {
  enabled = "true"

  driver   = "org.postgresql.Driver"
  host     = "localhost"
  url      = "jdbc:postgresql://"${db.address-lookup.host}"/addressbasepremium"
  username = "addresslookupreader"
  password = "pa55w0rd123"
}

bfpo.data = "data/bfpo-indicator_list_1feb2016.csv"

lcc {
  // these are comma-separated lists of files, all of which must have consistent column ordering
  counties = "data/local_custodian_ceremonial_counties.csv"
  table    = "data/local_custodian_table.csv, data/islands_local_custodian_table.csv"
}

header.x-origin = "X-LOCALHOST-Origin"

auditing {
  enabled=false
  traceRequests=true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

